name: sonarqube-check
on: [push, workflow_dispatch]

jobs:
  sonarqube-check:
    runs-on: ubuntu-latest
    container: unityci/editor:ubuntu-2021.3.2f1-windows-mono-1.0.1
    steps:
      - name: Update git version
        run: |
          apt-get update
          apt-get install software-properties-common -y
          add-apt-repository ppa:git-core/ppa -y
          apt-get update
          apt-get upgrade -y
          apt-get install git -y
          git --version
          
      - name: Install Dotnet SDK and Runtime
        run: |
          wget https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
          dpkg -i packages-microsoft-prod.deb
          rm packages-microsoft-prod.deb
          apt-get update
          apt-get install -y dotnet-sdk-6.0
          apt-get install -y aspnetcore-runtime-6.0
          apt-get install -y dotnet-runtime-6.0
          
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
          
      - name: Install JDK 11 for SonarScanner .NET
        run: apt update && apt install -y openjdk-11-jre-headless
        
      - name: Install SonarScanner .NET
        run: dotnet tool install dotnet-sonarscanner --tool-path ../sonarscanner --version 5.8.0
        
      - name: Cache Library Builder
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-2021.3.2f1

      - run: 'echo "$UNITY_LICENSE_FILE" > Unity_v2019.2.11f1.alf'
        shell: bash
        env:
          UNITY_LICENSE_FILE: ${{ secrets.UNITY_LICENSE_FILE }}
          
      - name: Activate unity and generate solution files
        continue-on-error: true
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        run: |
          unity-editor -username $UNITY_EMAIL -manualLicenseFile Unity_v2019.2.11f1.alf -buildTarget Win64 -nographics -batchmode -logFile /dev/stdout -projectPath . -executeMethod UnityEditor.SyncVS.SyncSolution -quit
          unity-editor -username $UNITY_EMAIL -manualLicenseFile Unity_v2019.2.11f1.alf -buildTarget Win64 -nographics -batchmode -logFile /dev/stdout -projectPath . -executeMethod UnityEditor.SyncVS.SyncSolution -quit

      - name: Build and scan Builder project
        env:
          FrameworkPathOverride: '/opt/unity/Editor/Data/MonoBleedingEdge/bin'
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          ../sonarscanner/dotnet-sonarscanner begin /k:"firegate666_breakout-challenge-unity3d" /d:sonar.login="$SONAR_TOKEN" /d:sonar.host.url="$SONAR_HOST_URL" /o:"firegate666" /d:sonar.exclusions=Library/**
          dotnet build firegate666-breakout-challenge-unity3d.sln
          ../sonarscanner/dotnet-sonarscanner end /d:sonar.login="$SONAR_TOKEN"
