name: Cloud Runner

on: [workflow_dispatch, push, pull_request]

env:
  GKE_ZONE: 'us-central1'
  GKE_REGION: 'us-central1'
  GKE_PROJECT: 'unitykubernetesbuilder'
  GKE_CLUSTER: 'game-ci-github-pipelines'
  GCP_LOGGING: true
  GCP_PROJECT: unitykubernetesbuilder
  GCP_LOG_FILE: ${{ github.workspace }}/cloud-runner-logs.txt
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
  AWS_BASE_STACK_NAME: game-ci-github-pipelines
  CLOUD_RUNNER_BRANCH: ${{ github.ref }}
  CLOUD_RUNNER_TESTS: true
  DEBUG: true
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  awsBuild:
    name: AWS Fargate Build
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - .
        unityVersion:
          - 2021.3.2f1
        targetPlatform:
          #- StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          #- StandaloneLinux64 # Build a Linux 64-bit standalone.
          #- WebGL # WebGL.
          #- iOS # Build an iOS player.
          #- Android # Build an Android .apk.
          #          - StandaloneWindows # Build a Windows standalone.
          #          - WSAPlayer # Build an Windows Store Apps player.
          #          - PS4 # Build a PS4 Standalone.
          #          - XboxOne # Build a Xbox One Standalone.
          #          - tvOS # Build to Apple's tvOS platform.
          #          - Switch # Build a Nintendo Switch player
    # steps
    steps:
      - name: Checkout (default)
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          PROJECT_PATH: ${{ matrix.projectPath }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TARGET_PLATFORM: ${{ matrix.targetPlatform }}
          cloudRunnerTests: true
          versioning: None
      - uses: ./
        id: aws-fargate-unity-build
        timeout-minutes: 25
        with:
          cloudRunnerCluster: aws
          versioning: None
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          aws s3 cp s3://game-ci-test-storage/${{ steps.aws-fargate-unity-build.outputs.CACHE_KEY }}/build-${{ steps.aws-fargate-unity-build.outputs.BUILD_GUID }}.tar build-${{ steps.aws-fargate-unity-build.outputs.BUILD_GUID }}.tar
          ls
